# ESGN: Esports Gaming Network

## Overview
Welcome to ESGN - your ultimate destination for staying updated on everything related to esports. Our platform provides a comprehensive hub where users can effortlessly access the latest news, team details, game information, live scores, and more. This repository contains the complete codebase for ESGN, including both the frontend and backend components.

## Features
- **Custom APIs:** We've developed tailored APIs to cater to all our requirements, allowing seamless interactions such as posting and retrieving articles, accessing team and game details, and updating scores.
- **Live Updates:** Stay in the loop with real-time updates on esports events, scores, and news.
- **User-Friendly Interface:** Our intuitive interface ensures that users can navigate through the platform with ease, accessing the information they need effortlessly.
- **Docker Integration:** Included in this repository is Docker code for containerizing both the frontend and backend, facilitating easy deployment and scalability.

## Technologies Used
ESGN is powered by a stack of cutting-edge technologies, including:
- Frontend: JavaScript, React
- Backend: Node.js, Express
- Database: MongoDB
- Containerization: Docker

## Getting Started
To set up and run ESGN locally, follow these simple steps:
1. Clone this repository to your local machine.
2. Navigate to the project directory in your terminal.
3. Install dependencies by running `npm install` in both the frontend and backend directories.
4. Set up your MongoDB database and ensure it's running.
5. Create a `.env` file in the backend directory and configure environment variables as needed (e.g., database URI, JWT secret).
6. Start the backend server by running `npm start` in the backend directory.
7. Start the frontend server by running `npm start` in the frontend directory.
8. Access the application via the provided URL (e.g., `localhost:3000`).

## Contributing
We welcome contributions from the community to make ESGN even better! If you'd like to contribute, please follow these guidelines:
1. Fork the repository.
2. Create a new branch (`git checkout -b feature/your-feature-name`).
3. Implement your changes.
4. Commit your changes (`git commit -am 'Add some feature'`).
5. Push to the branch (`git push origin feature/your-feature-name`).
6. Create a new Pull Request.
